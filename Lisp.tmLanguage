<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>comment</key>
	<string></string>
	<key>fileTypes</key>
	<array>
		<string>lisp</string>
		<string>cl</string>
		<string>l</string>
		<string>mud</string>
		<string>el</string>
	</array>
	<key>foldingStartMarker</key>
	<string>\(</string>
	<key>foldingStopMarker</key>
	<string>\)</string>
	<key>keyEquivalent</key>
	<string>^~L</string>
	<key>name</key>
	<string>Lisp</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.lisp</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(;).*$\n?</string>
			<key>name</key>
			<string>comment.line.semicolon.lisp</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function-type.lisp</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.lisp</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?:\()((?i:defgeneric|define-compiler-macro|define-method-combination|define-modify-macro|define-setf-expander|defmethod|define-\S+))\s+((?:\w|[+\-<>/*&amp;=.?!$%:@\[\]^{}~#|])+)</string>
			<key>name</key>
			<string>meta.function.lisp</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?<=\s)(?i:&allow-other-keys|&aux|&body|&environment|&key|&optional|&rest|&whole)(?=\s+)</string>
			<key>name</key>
			<string>meta.function-parameters.lisp</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function-type.lisp</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.lisp</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?:\()((?i:deftype|defstruct|define-condition|defpackage|defclass))\s+((?:\w|[+\-<>/*&amp;=.?!$%:@\[\]^{}~#|])+)</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function-type.lisp</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.variable.lisp</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?:\()((?i:defvar|defconstant|defparameter|define-symbol-macro))\s+((?:\w|[+\-<>/*&amp;=.?!$%:@\[\]^{}~#|])+)</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.constant.lisp</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(#)(\w|[\\+-=&lt;&gt;'"&amp;#])+</string>
			<key>name</key>
			<string>constant.character.lisp</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.variable.lisp</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.variable.lisp</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?<=^|\s|[()])(\*)(\S*)(\*)(?=$|\s|[()])</string>
			<key>name</key>
			<string>variable.other.global.lisp</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?<=^|\s|[()]):(\w|[+\-<>/*&amp;=.?!$%:@\[\]^{}~#|])*</string>
			<key>name</key>
			<string>keyword.constant.lisp</string>
		</dict>
		<dict>
			<key>match</key>
				<string>(?<=^|\s|[()])(#|rest|zip|empty\?|nempty\?|structure|struct|offset|ptr|long|int|short|byte|path|write-short|write-long|write-line|write-int|write-char|write|within-compile-env|while|empty\?|view-fit|nempty\?|first|second|font-glyph-bounds|deffimethod|last|when|gui-info|view-locate|nil\?|defabstractmethod|lambda\?|macro\?|aeach|each!|some!|env\?|vdu-load|unzip|until|unless|undef|ui-window|ui-view|ui-vdu|ui-tree|ui-root|ui-tool-bar|ui-title-bar|ui-title|ui-textfield|ui-slider|ui-scroll|ui-props|ui-progress|ui-merge-props|ui-label|ui-grid|ui-flow|ui-element|hash|ui-canvas|ui-buttons|ui-button|ui-backdrop|type-to-size|weak-ref|obj-ref|type-of|tuple-set|tuple-get|trim-start|trim-end|trim|to-upper|to-lower|times|pii-time|pii-fstat|throw|task-sleep|task-mailbox|sym\?|seq\?|sym|swap|string-stream|intern-seq|intern|io-stream|load-stream|stream-flush|stream-seek|stream-avail|str\?|str-to-num|str|stdio-get-args|starts-with|sqrt|split|sorted|sort|some\!|some|slice|sin|sign|shuffled|shuffle|setq|setd|set-field|set|save|repl|reduced-reduce|reduced-reduce-rev|reduced|reduce-rev|reduce|recip|reals|read-short|read-long|read-line|read-int|read-char|read-avail|read|rcurry|range|random|r2i|r2f|quote|quasi-quote|push|progn|print|prin|pop|pii-write-char|list\?|\.super|pii-read-char|pii-dirlist|penv|path-transform|path-stroke-polylines|path-stroke-polygons|path-simplify|path-gen-quadratic|path-gen-cubic|path-gen-arc|path-filter|pii-remove|partition|pivot|pad|out-stream|or|opt|open-remote|open-pipe|open-child|nums-sum|nums-sub|nums-scale|nums-mul|nums-mod|nums-frac|nums-floor|nums-div|nums-add|nums-abs|nums|num\?|num-to-char|ntz|nto|notevery|notany|not|nlz|nlo|neg|min|merge-obj|mem-stats|max|match\?|map-rev|map|mail-timeout|mail-send|mail-select|mail-read|mail-poll|mail-free-mbox|mail-enquire|mail-forget|mail-declare|mail-alloc-mbox|macroexpand|list?|logxor|lognot|logior|logand|log2|load|list|let|length|lambda|macro|unquote-splicing|num-to-utf8|unquote|mail-nodes|join|debug-fun\?|debug-send|insert|inc|in-stream|in-set-state|in-next-msg|in-mbox|in-get-state|import|if|i2r|i2f|gui-add-back|gui-add|get-ushort|get-uint|get-ubyte|get-short|get-long|get-int|get-field|get-cstr|get-byte|get|gensym|frac|font-glyph-ranges|font-glyph-paths|func\?|floor|fixeds|find-rev|find|filter|file-stream|ffi|f2r|f2i|exec|every|eval|erase|eql|env|ends-with|elem-set|elem|each\!|each-rev|each-mergeable-rev|each-mergeable|each-line|each|defun-debug|defun|defq|defmacro|def|dec|debug-fun|debug-format|debug|curry|create-text|create-stdio|\.|create-font|create-canvas|canvas-to-argb32|canvas-from-argb32|cpu|cos|copy|const|cond|compose|code|cmp|clear|char-to-num|char|catch|cat|case|cap|seq\?|canvas-info|def\?|reverse|prebind|bind|awhile|awhen|ascii-upper|ascii-lower|ascii-code|defclass|defmethod|\.-\>|ascii-char|tolist|array|apply|and|align|aif|age|acond|abs|abi|aand|odd\?|even\?|pow|neg\?|pos\?|\>\>\>|\>\>|\>\=|\>|\=|\<\=|\<\<|\<|\+|%|\/\=|\/|\*|-)(?=\s|$|[()])</string>
			<key>name</key>
			<string>keyword.control.lisp</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?<=^|\s|[()])(?i:nil|t)(?=$|\s|[()])</string>
			<key>name</key>
			<string>constant.language.lisp</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\b</string>
			<key>name</key>
			<string>constant.numeric.lisp</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.lisp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.lisp</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.lisp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.lisp</string>
				</dict>
			</array>
		</dict>
	</array>
	<key>scopeName</key>
	<string>source.lisp</string>
	<key>uuid</key>
	<string>00D451C9-6B1D-11D9-8DFA-000D93589AF6</string>
</dict>
</plist>
